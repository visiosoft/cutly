@page "/"
@layout LandingLayout
@inject IUrlShortenerService UrlService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Shorly - URL Shortener</PageTitle>

<div class="hero-section">
    <div class="hero-content">
        <div class="hero-text">
            <h1>Transform Your Links,<br/><span class="gradient-text">Amplify Your Impact</span></h1>
            <p class="hero-description">
                Create powerful, branded short links that make an impact. Track engagement, 
                analyze your audience, and take control of your digital presence with our 
                enterprise-grade URL management platform.
            </p>
        </div>
        <div class="url-input-container">
            <div class="input-group">
                <div class="input-wrapper">
                    <i class="fas fa-link input-icon"></i>
                    <input @bind="longUrl" 
                           @bind:event="oninput"
                           class="form-control" 
                           placeholder="Paste your long URL here..." />
                </div>
                <button class="btn btn-primary" 
                        @onclick="ShortenUrl" 
                        disabled="@(!IsValidUrl)">
                    <span>Shorten URL</span>
                    <i class="fas fa-arrow-right"></i>
                </button>
            </div>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-error mt-2">@errorMessage</div>
            }
            @if (!string.IsNullOrEmpty(shortenedUrl))
            {
                <div class="result-container">
                    <div class="result-header">
                        <i class="fas fa-check-circle"></i>
                        <span>Your shortened URL is ready!</span>
                    </div>
                    <div class="result-content">
                        <div class="shortened-url">
                            <a href="@shortenedUrl" target="_blank">@shortenedUrl</a>
                        </div>
                        <button class="btn btn-copy" @onclick="() => CopyToClipboard(shortenedUrl)">
                            <i class="fas fa-copy"></i>
                            <span>Copy</span>
                        </button>
                    </div>
                </div>
            }
            <p class="terms-text">By using Shorly, you agree to our <a href="/terms">Terms of Service</a> and <a href="/privacy">Privacy Policy</a></p>
        </div>
        <div class="hero-stats">
            <div class="stat-item">
                <span class="stat-number">10M+</span>
                <span class="stat-label">Links Shortened</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">50K+</span>
                <span class="stat-label">Active Users</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">99.9%</span>
                <span class="stat-label">Uptime</span>
            </div>
        </div>
    </div>
</div>

<div class="features-section">
    <div class="container">
        @if (!string.IsNullOrEmpty(shortenedUrl))
        {
            <div class="card result-card">
                <h3>Your shortened URL is ready!</h3>
                <div class="input-group">
                    <input type="text" 
                           class="form-control" 
                           value="@shortenedUrl" 
                           readonly />
                    <button class="btn btn-secondary" 
                            @onclick="() => CopyToClipboard(shortenedUrl)">
                        <i class="fas fa-copy"></i> Copy
                    </button>
                </div>
            </div>
        }

        <div class="features-grid">
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-link"></i>
                </div>
                <h3>URL Shortener</h3>
                <p>Easily create custom and branded short links with Shorly. Optimize your URLs to stand out and increase engagement for your brand.</p>
            </div>

            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <h3>Link Analytics</h3>
                <p>Track and measure your links' performance in real time. Use Shorly's advanced analytics to understand how your audience interacts with your links.</p>
            </div>

            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-qrcode"></i>
                </div>
                <h3>QR Codes</h3>
                <p>Generate personalized and branded QR codes to seamlessly connect your audience to your online content. Enhance engagement with custom designs.</p>
            </div>

            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-bio"></i>
                </div>
                <h3>Link in Bio</h3>
                <p>Create personalized link in bio pages that highlight your most important content. Direct traffic from social platforms to all your key links in one place.</p>
            </div>
        </div>

        <div class="discover-section">
            <h2>Discover the possibilities of managing short links</h2>
            <p>Shorly is a comprehensive Link Management Platform and URL shortener that helps you take full control over your links. Easily create short links and manage your campaigns with features like custom URL slugs, UTM codes for tracking, A/B testing, and mobile redirects. Plus, enjoy advanced options like password-protected links and deep links â€” and much more.</p>
        </div>

        @if (recentUrls?.Any() == true)
        {
            <div class="recent-urls-section">
                <h2>Recent URLs</h2>
                <div class="recent-urls-grid">
                    @foreach (var url in recentUrls)
                    {
                        <div class="url-card">
                            <div class="url-card-header">
                                <div class="url-stats">
                                    <span class="clicks">
                                        <i class="fas fa-chart-line"></i> @url.ClickCount clicks
                                    </span>
                                    <span class="date">
                                        <i class="fas fa-calendar"></i> @url.CreatedAt.ToString("MMM dd, yyyy")
                                    </span>
                                </div>
                            </div>
                            <div class="url-card-body">
                                <div class="url-info">
                                    <div class="short-url">
                                        <i class="fas fa-link"></i>
                                        <a href="@url.ShortUrl" target="_blank">@url.ShortUrl</a>
                                    </div>
                                    <div class="long-url">
                                        <a href="@url.LongUrl" target="_blank" title="@url.LongUrl">
                                            @(url.LongUrl.Length > 50 ? url.LongUrl.Substring(0, 50) + "..." : url.LongUrl)
                                        </a>
                                    </div>
                                </div>
                                <div class="url-actions">
                                    <button class="btn btn-icon" @onclick="() => CopyToClipboard(url.ShortUrl)">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                    <button class="btn btn-icon" @onclick="() => ShareUrl(url.ShortUrl)">
                                        <i class="fas fa-share-alt"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<style>
    .hero-section {
        background: linear-gradient(135deg, #1e1b4b 0%, #312e81 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        text-align: center;
        padding: 6rem 2rem;
        position: relative;
        overflow: hidden;
    }

    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 50% 50%, rgba(99, 102, 241, 0.1) 0%, rgba(79, 70, 229, 0) 50%);
    }

    .hero-content {
        max-width: 900px;
        width: 100%;
        position: relative;
        z-index: 1;
    }

    .hero-text {
        margin-bottom: 3rem;
    }

    .hero-content h1 {
        font-size: 4.5rem;
        font-weight: 800;
        margin-bottom: 1.5rem;
        line-height: 1.1;
        letter-spacing: -0.02em;
    }

    .gradient-text {
        background: linear-gradient(135deg, #60a5fa 0%, #c084fc 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
    }

    .hero-description {
        font-size: 1.25rem;
        margin-bottom: 3rem;
        line-height: 1.6;
        opacity: 0.9;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
    }

    .url-input-container {
        background: rgba(255, 255, 255, 0.05);
        padding: 2.5rem;
        border-radius: 1.5rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        max-width: 800px;
        margin: 0 auto;
    }

    .input-wrapper {
        position: relative;
        flex: 1;
    }

    .input-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6b7280;
        font-size: 1.2rem;
    }

    .input-group {
        display: flex;
        gap: 1rem;
        max-width: 700px;
        margin: 0 auto;
    }

    .input-group .form-control {
        flex: 1;
        height: 3.5rem;
        font-size: 1.1rem;
        padding: 0 1rem 0 3rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 0.75rem;
        background: rgba(255, 255, 255, 0.05);
        color: white;
        transition: all 0.3s ease;
    }

    .input-group .form-control::placeholder {
        color: rgba(255, 255, 255, 0.5);
    }

    .input-group .form-control:focus {
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.2);
        outline: none;
    }

    .input-group .btn {
        height: 3.5rem;
        padding: 0 2rem;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #60a5fa 0%, #c084fc 100%);
        border: none;
    }

    .input-group .btn:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(192, 132, 252, 0.2);
    }

    .input-group .btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }

    .terms-text {
        margin-top: 1.5rem;
        font-size: 0.875rem;
        opacity: 0.7;
    }

    .terms-text a {
        color: #60a5fa;
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .terms-text a:hover {
        color: #93c5fd;
    }

    .hero-stats {
        display: flex;
        justify-content: center;
        gap: 4rem;
        margin-top: 4rem;
    }

    .stat-item {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #60a5fa 0%, #c084fc 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
    }

    .stat-label {
        font-size: 1rem;
        color: rgba(255, 255, 255, 0.7);
        margin-top: 0.5rem;
    }

    .features-section {
        padding: 4rem 2rem;
        background-color: #f8fafc;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .features-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
        margin: 4rem 0;
    }

    .feature-card {
        background: white;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s;
    }

    .feature-card:hover {
        transform: translateY(-5px);
    }

    .feature-icon {
        font-size: 2rem;
        color: var(--primary-color);
        margin-bottom: 1rem;
    }

    .feature-card h3 {
        font-size: 1.25rem;
        margin-bottom: 1rem;
        color: var(--text-color);
    }

    .feature-card p {
        color: var(--secondary-color);
        line-height: 1.6;
    }

    .discover-section {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 1rem;
        margin: 4rem 0;
    }

    .discover-section h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: var(--text-color);
    }

    .discover-section p {
        max-width: 800px;
        margin: 0 auto;
        color: var(--secondary-color);
        line-height: 1.8;
    }

    .result-card {
        margin-bottom: 2rem;
        text-align: center;
    }

    .result-card h3 {
        margin-bottom: 1.5rem;
        color: var(--text-color);
    }

    .recent-urls-section {
        margin-top: 4rem;
    }

    .recent-urls-section h2 {
        font-size: 2rem;
        color: var(--text-color);
        margin-bottom: 2rem;
        text-align: center;
    }

    .recent-urls-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .url-card {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .url-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 12px rgba(0, 0, 0, 0.1);
    }

    .url-card-header {
        padding: 1rem;
        background: #f8fafc;
        border-bottom: 1px solid #e2e8f0;
    }

    .url-stats {
        display: flex;
        justify-content: space-between;
        font-size: 0.875rem;
        color: #64748b;
    }

    .url-stats span {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .url-card-body {
        padding: 1.5rem;
    }

    .url-info {
        margin-bottom: 1rem;
    }

    .short-url {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .short-url i {
        color: var(--primary-color);
    }

    .short-url a {
        color: var(--text-color);
        font-weight: 500;
        text-decoration: none;
    }

    .long-url a {
        color: #64748b;
        font-size: 0.875rem;
        text-decoration: none;
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .url-actions {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
    }

    .btn-icon {
        padding: 0.5rem;
        border-radius: 0.5rem;
        background: #f1f5f9;
        color: #64748b;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-icon:hover {
        background: #e2e8f0;
        color: var(--primary-color);
    }

    .result-container {
        margin-top: 1.5rem;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 1rem;
        padding: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        animation: fadeIn 0.3s ease;
    }

    .result-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
        color: #60a5fa;
    }

    .result-header i {
        font-size: 1.25rem;
    }

    .result-content {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .shortened-url {
        flex: 1;
        background: rgba(255, 255, 255, 0.05);
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .shortened-url a {
        color: white;
        text-decoration: none;
        word-break: break-all;
    }

    .btn-copy {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: none;
        padding: 0.75rem 1.25rem;
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

    .btn-copy:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-1px);
    }

    .btn-copy i {
        font-size: 1rem;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .hero-content h1 {
            font-size: 3rem;
        }

        .hero-description {
            font-size: 1.1rem;
            padding: 0 1rem;
        }

        .input-group {
            flex-direction: column;
        }

        .input-group .form-control,
        .input-group .btn {
            width: 100%;
        }

        .hero-stats {
            flex-direction: column;
            gap: 2rem;
        }

        .stat-item {
            width: 100%;
        }

        .url-input-container {
            padding: 1.5rem;
            margin: 0 1rem;
        }

        .features-grid {
            grid-template-columns: 1fr;
        }

        .recent-urls-grid {
            grid-template-columns: 1fr;
        }

        .url-card {
            margin: 0 1rem;
        }

        .result-content {
            flex-direction: column;
        }

        .btn-copy {
            width: 100%;
            justify-content: center;
        }
    }
</style>

@code {
    private string longUrl = string.Empty;
    private string shortenedUrl = string.Empty;
    private string errorMessage = string.Empty;
    private IEnumerable<ShortenedUrl>? recentUrls;

    protected override async Task OnInitializedAsync()
    {
        await LoadRecentUrls();
    }

    private bool IsValidUrl => Uri.TryCreate(longUrl, UriKind.Absolute, out _);

    private async Task ShortenUrl()
    {
        try
        {
            errorMessage = string.Empty;
            var result = await UrlService.ShortenUrlAsync(longUrl);
            shortenedUrl = result.ShortUrl;
            await LoadRecentUrls();
        }
        catch (Exception)
        {
            errorMessage = "Failed to shorten URL. Please try again.";
        }
    }

    private async Task LoadRecentUrls()
    {
        try
        {
            recentUrls = await UrlService.GetRecentUrlsAsync();
        }
        catch (Exception)
        {
            recentUrls = Enumerable.Empty<ShortenedUrl>();
        }
    }

    private async Task CopyToClipboard(string url)
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", url);
    }

    private async Task ShareUrl(string url)
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.share", new
            {
                title = "Share Short URL",
                text = "Check out this shortened URL",
                url = url
            });
        }
        catch
        {
            // Handle error or fallback to clipboard
            await CopyToClipboard(url);
        }
    }
} 