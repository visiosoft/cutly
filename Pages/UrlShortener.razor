@page "/url-shortener"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<PageTitle>URL Shortener - Cutly</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">URL Shortener</h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="originalUrl" class="form-label">Enter your URL:</label>
                        <input type="url" class="form-control" id="originalUrl" @bind="originalUrl" placeholder="https://example.com" />
                    </div>
                    <div class="d-grid">
                        <button class="btn btn-primary" @onclick="ShortenUrl" disabled="@(!IsValidUrl)">Shorten URL</button>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(shortenedUrl))
                    {
                        <div class="mt-4">
                            <div class="alert alert-success">
                                <h5>Your shortened URL:</h5>
                                <div class="d-flex align-items-center">
                                    <input type="text" class="form-control" value="@shortenedUrl" readonly />
                                    <button class="btn btn-outline-secondary ms-2" @onclick="CopyToClipboard">
                                        <i class="bi bi-clipboard"></i> Copy
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="mt-4">
                            <div class="alert alert-danger">
                                @errorMessage
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string originalUrl = "";
    private string shortenedUrl = "";
    private string errorMessage = "";

    private bool IsValidUrl => !string.IsNullOrEmpty(originalUrl) && 
                              Uri.TryCreate(originalUrl, UriKind.Absolute, out _);

    private async Task ShortenUrl()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/urls", new { OriginalUrl = originalUrl });
            
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<UrlResponse>();
                shortenedUrl = result?.ShortUrl ?? "";
                errorMessage = "";
            }
            else
            {
                errorMessage = "Failed to shorten URL. Please try again.";
                shortenedUrl = "";
            }
        }
        catch
        {
            errorMessage = "An error occurred while shortening the URL.";
            shortenedUrl = "";
        }
    }

    private async Task CopyToClipboard()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", shortenedUrl);
        }
        catch
        {
            errorMessage = "Failed to copy URL to clipboard.";
        }
    }

    private class UrlResponse
    {
        public string ShortUrl { get; set; } = "";
    }
} 